search()
setwd("C:\Users\SeokRae Kim\Desktop\2018 4학년 1학기\빅데이터 기술\R 프로그래밍\R_Guide")
setwd("C:/Users/SeokRae Kim/Desktop/2018 4학년 1학기/빅데이터 기술/R 프로그래밍/R_Guide")
knitr::opts_chunk$set(echo = TRUE)
sink("output.txt") # 이후에 발생하는 모든 출력을 화면 외에 output.txt에 저
cat(" I Love You \n") # 메시지가 output.txt 파일로 보내짐
sink("output.txt") # 이후에 발생하는 모든 출력을 화면 외에 output.txt에 저
cat(" I Love You ") # 메시지가 output.txt 파일로 보내짐
sink() # 원래 위치로 돌아간다.
sink("output.txt") # 이후에 발생하는 모든 출력을 화면 외에 output.txt에 저
cat(" I Love You \n") # 메시지가 output.txt 파일로 보내짐
sink() # 원래 위치로 돌아간다.
view(iris)
view(iris)
view("iris")
summary(irsi)
summary(irs)
summary(iris)
x <- summary(iris)
x
x
x
cat(x)
x
x <- summary(iris)
x
x <- summary(iris)
x
view(x)
View(x)
source('~/.active-rstudio-document', echo=TRUE)
summary(iris)
x <- summary(iris)
x
Summary(iris)
summary(iris)
x
ls()
rm(x)
setwd("C:\Users\SeokRae Kim\Desktop\2018 4학년 1학기\빅데이터 기술\R 프로그래밍\r_study")
setwd("C:/Users/SeokRae Kim/Desktop/2018 4학년 1학기/빅데이터 기술/R 프로그래밍/r_study")
knitr::opts_chunk$set(echo = TRUE)
is.na()
x <- null
x <- NULL
sex <- factor("m", c("m", "f"))
sex
sex <- factor("m", c("m", "f"))
sex
sex
cat(sex)
cat(sex)
sex
setdiff ( c ( " a " , " b " , " c " ) , c ( " a " , " d " ) )
setdiff ( c ( " a " , " b " , " c " ) , c ( " a " , " d " ) )
setdiff ( c ( "a" , "b" , "c" ) , c ( "a" , "d" ) )
setwd("~/")
setwd("C:/Users/SeokRae Kim/Desktop/2018 4학년 1학기/빅데이터 기술/R 프로그래밍/r_study")
x <- read.csv("/r_study/sample/a.csv", stringsAsFactors = FALSE)
help("stringsAsFactors")
help(stringsAsFactors)
?cbind
??cbind
help(cbind)
library(doBy)
library("doBy")
install.packages("doBy")
library("doBy")
summaryBy(iris$Sepal.Width + iris$Sepal.Length ~ iris$Species, iris)
orderBy(~ Sepal.Width, iris)
orderBy(~ Sepal.Width, iris)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
install.packages("doBy")
source('~/.active-rstudio-document', encoding = 'UTF-8')
install.packages("doBy")
orderBy(~ Sepal.Width, iris)
library("doBy")
(mean(iris$Sepal.Length))
print(mean(iris$Sepal.Length))
aggregate(Sepal.Width ~ Species, iris, mean)
install.packages(sqldf)
library(sqldf)
install.packages(sqldf)
install.packages(sqldf)
install.packages(sqldf)
install.packages("sqldf")
library(sqldf)
sqldf("select distinct Species from iris")
knitr::opts_chunk$set(echo = TRUE)
sqldf("select distinct Species from iris")
sqldf("select avg(Sepal_Length) from iris where Species='setosa'")
sqldf("select avg(Sepal.Length) from iris where Species='setosa'")
sqldf("select distinct Species from iris")
sqldf("select * from iris")
sqldf("select distinct Species from iris")
sqldf("select avg(Sepal.Length) from iris where Species='setosa'")
sqldf("select avg(Sepal_Length) from iris where Species='setosa'")
mean(subset(iris, Species == "setosa")$Sepal.Length)
install.packages("plyr")
library(plyr)
install.packages("plyr")
library(plyr)
install.packages("plyr")
library(plyr)
install.packages("plyr")
library(plyr)
library(plyr)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
install.packages("plyr")
install.packages("plyr")
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
adply(iris, 1, function(row) { row$Sepal.Length >= 5.0 & row$Species == "setosa"})
adply(iris,
1,
function(row) {
row$Sepal.Length >= 5.0 & row$Species == "setosa"
})
adply(iris,
1,
function(row) {
data.frame(
sepal_ge_5_setosa=c(row$Sepal.Length >= 5.0 & row$Species == "setosa")
)
})
ddply(iris,
.(Species),
function(sub) {
data.frame(sepal.width.mean = mean(sub$Sepal.Width))
})
ddply(iris,
.(Species),
function(sub) {
data.frame(sepal.width.mean = mean(sub$Sepal.Width))
})
ddply(iris,
.(Species),
function(sub) {
data.frame(sepal.width.mean = mean(sub$Sepal.Width))
})
ddply(iris,
.(Species, Sepal.Length > 5.0),
function(sub) {
data.frame(sepal.width.mean = mean(sub$sepal.Width))
}
)
data.frame(sepal.width.mean = mean(sub$Sepal.Width))
ddply(iris,
.(Species, Sepal.Length > 5.0),
function(sub) {
data.frame(sepal.width.mean = mean(sub$Sepal.Width))
}
)
# 데이터 확인
head(baseball)
head(baseball)
# 데이터 확인
library(baseball)
head(baseball)
head(subset(baseball, id == "ansonca01"))
head(subset(baseball, id == "ansonca01"))
ddply(baseball, .(id), function(sub) { mean(sub$g) })
ddply(baseball, .(id), function(sub) { mean=mean(sub$g) })
ddply(baseball, .(id), function(sub) { data.frame(mean=mean(sub&g))}
ddply(baseball, .(id), function(sub) { data.frame(mean=mean(sub&g))}
ddply(baseball, .(id), function(sub) { data.frame(swm = mean(sub&g))}
ddply(baseball, .(id), function(sub) { data.frame(swm = mean(sub&g))})
ddply(baseball, .(id), function(sub) { data.frame(swm = mean(sub&g))})
ddply(baseball, .(id), function(sub) { mean(sub$g) })
ddply(baseball, .(id), function(sub) { data.frame(swm=mean(sub&g))})
ddply(baseball, .(id), function(sub) { data.frame(mean(sub&g))})
ddply(baseball, .(id), function(sub) { data.frame(vv=mean(sub&g))})
ddply(baseball, .(id), function(sub) { mean(sub$g) })
ddply(baseball, .(id), function(sub) { data.frame(baseball.mean=mean(sub&g))})
ddply(baseball, .(id), function(sub) { data.frame(baseball.sub.mean=mean(sub&g))})
head(ddply(baseball
,.(id)
, transform
, cyear = year - min(year) + 1))
head(ddply(baseball,
.(id),
mutate,
cyear = year - min(year) + 1,
log_cyear = log(cyear)
))
head(ddply(baseball,
.(id),
mutate,
cyear = year - min(year) + 1,
log_cyear = log(cyear)
))
head(ddply(baseball
,.(id)
, transform
, cyear = year - min(year) + 1))
head(subset(baseball, id == "ansonca01"))
head(ddply(baseball,
.(id),
summarise,
minyear=(year)
))
head(ddply(baseball,
.(id),
summarise,
minyear=(year)
))
ddply(baseball, .(id), mean = function(sub) { mean(sub$g) })
ddply(baseball, .(id),function(sub) { mean(sub$g) })
head(ddply(baseball,
.(id),
summarise,
minyear=min(year),
maxyear=max(year)
))
head(ddply(baseball,
.(id),
summarise,
minyear=min(year),
maxyear=max(year),
meanyear= mean(sub$g)
))
head(ddply(baseball,
.(id),
summarise,
minyear=min(year),
maxyear=max(year),
meanyear= mean(year)
))
head(ddply(baseball,
.(id),
subset,
g==max(g)
))
x
x
mean=1:5,
sd=1:5
)
x
x <- data.frame(
mean=1:5,
sd=1:5
)
x
x <- data.frame(
mean=1:5,
sd=1:5
)
x
mdply(x, rnorm, n=2)
